<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
						xmlns:mx="library://ns.adobe.com/flex/mx" 
						height="800" layout="vertical" width="1280"
						backgroundColor="#222222" paddingBottom="0" paddingLeft="0" paddingRight="0"
						paddingTop="0" verticalGap="0"
						showTitleBar="false" showStatusBar="false" xmlns:local="*" applicationComplete="windowedapplication1_applicationCompleteHandler(event)" xmlns:view="com.starplatina.texture.tile.view.*" >
	<fx:Style source="main.css" />
	<fx:Script>
		<![CDATA[
			import com.starplatina.texture.tile.TileMapManager;
			import com.starplatina.texture.tile.view.StatusWindow;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			[Embed( source='assets/icon16.png' )]
			private var icon16 : Class;
			private var _tilesManager:TileMapManager;
			private var _currentStateWindow:StatusWindow;
			
			
			protected function label1_clickHandler( event : MouseEvent ) : void
			{
				Alert.show( "BLANDON.DU@GAMESYS.CO.UK  BLANDON.TRUEGRAVE@GMAIL.COM");
			}
			
			private function dockHandler() : void
			{
				this.nativeWindow.visible = false;
				addSysTrayIcon();
			}
			
			private function addSysTrayIcon() : void
			{
				this.nativeApplication.icon.bitmaps = [ new icon16()];
				
				if( NativeApplication.supportsSystemTrayIcon )
				{
					var sti : SystemTrayIcon = SystemTrayIcon( this.nativeApplication.icon );
					sti.tooltip = "click to show main window";
					sti.addEventListener( MouseEvent.CLICK, showAppWindow );
				}
			}
			
			private function showAppWindow( event : MouseEvent ) : void
			{
				this.nativeWindow.visible = true;
				this.nativeApplication.icon.bitmaps = [];
				
				this.nativeWindow.orderToFront();
				
				this.activate();
			}
			
			private function exitHandler() : void
			{
				this.exit();
			}
			
			protected function windowedapplication1_applicationCompleteHandler(event:FlexEvent):void
			{
				_tilesManager = TileMapManager.getInstance();
				_tilesManager.addEventListener(TileMapManager.START_READING_FILES,showReading);
				_tilesManager.addEventListener(TileMapManager.START_WRITING_FILES,showWriting);
				_tilesManager.addEventListener(TileMapManager.FILE_PROCESSED,fileProcessedHandler);
				_tilesManager.addEventListener(TileMapManager.TILE_DATA_GENERATED,tileDataGeneratedHandler);
				_tilesManager.addEventListener(TileMapManager.PREVIEW_DATA_GENERATED,previewDataGeneratedHandler);
				_tilesManager.addEventListener(TileMapManager.NOTIFYCLOSEPOPUPS,closePopupHandler);
				_currentStateWindow = new StatusWindow();
			}
			
			protected function fileProcessedHandler(event:Event):void
			{
				PopUpManager.removePopUp(_currentStateWindow);
				mainViewstack.selectedIndex = 1;
			}
			
			protected function tileDataGeneratedHandler(event:Event):void
			{
				PopUpManager.removePopUp(_currentStateWindow);
				outputView.previewBitmap = _tilesManager.previewOutcome;
				outputView.targetFolder = param.saveFile;
				outputView.outcome = _tilesManager.tileMapData;
				
				mainViewstack.selectedIndex = 2;
			}
			
			protected function previewDataGeneratedHandler(event:Event):void
			{
				PopUpManager.removePopUp(_currentStateWindow);
			}
			
			protected function showReading(event:Event):void
			{
				_currentStateWindow.promptState = StatusWindow.STATE_READING;
				showStateWindow()
			}
			
			protected function showWriting(event:Event):void
			{
				_currentStateWindow.promptState = StatusWindow.STATE_WRITING;
				showStateWindow()
			}
			
			private function showStateWindow():void
			{
				PopUpManager.addPopUp(_currentStateWindow,this,true);
				PopUpManager.centerPopUp(_currentStateWindow);
			}
			
			protected function closePopupHandler(event:Event):void
			{
				PopUpManager.removePopUp(_currentStateWindow);
			}
			
		]]>
	</fx:Script>
	<mx:HBox height="64" width="100%"
			 mouseDown="this.nativeWindow.startMove()"
			 backgroundColor="#111111" horizontalAlign="right" paddingLeft="20" paddingRight="20"
			 verticalAlign="middle">
		<mx:Label selectable="false" text="IWI TILED TEXTURE SPRITESHEET GENERATOR" width="100%"
				  color="#AAF0FF" fontSize="23" />
		<mx:Label selectable="false" text="version 1.2"
				  click="label1_clickHandler(event)"
				  color="#579BAA" paddingTop="10" />
		<mx:Spacer height="10" width="100%" />
		<mx:LinkButton height="28" label="_" width="28" x="414"
					   y="7"
					   click="dockHandler()"
					   color="#D9D9D9" fontFamily="Arial" fontWeight="bold" paddingBottom="2"
					   paddingLeft="0" paddingRight="0" />
		<mx:LinkButton height="28" label="X" width="28" x="444"
					   y="7"
					   click="exitHandler()"
					   color="#D9D9D9" fontFamily="Verdana" fontSize="13" fontWeight="bold"
					   textAlign="left" />
	</mx:HBox>
	<mx:ViewStack id="mainViewstack" creationPolicy="all"
				  height="100%" width="100%">
		<view:TileFileRecipient/>
		<view:ParameterPanel id="param"/>
		<view:OutPutView id="outputView"/>
	</mx:ViewStack>
</mx:WindowedApplication>
